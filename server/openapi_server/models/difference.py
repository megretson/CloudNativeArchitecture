from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class Difference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recipe=None, make=None):  # noqa: E501
        """Difference - a model defined in OpenAPI

        :param recipe: The recipe of this Difference.  # noqa: E501
        :type recipe: str
        :param make: The make of this Difference.  # noqa: E501
        :type make: str
        """
        self.openapi_types = {
            'recipe': str,
            'make': str
        }

        self.attribute_map = {
            'recipe': 'recipe',
            'make': 'make'
        }

        self._recipe = recipe
        self._make = make

    @classmethod
    def from_dict(cls, dikt) -> 'Difference':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The difference of this Difference.  # noqa: E501
        :rtype: Difference
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recipe(self) -> str:
        """Gets the recipe of this Difference.


        :return: The recipe of this Difference.
        :rtype: str
        """
        return self._recipe

    @recipe.setter
    def recipe(self, recipe: str):
        """Sets the recipe of this Difference.


        :param recipe: The recipe of this Difference.
        :type recipe: str
        """

        self._recipe = recipe

    @property
    def make(self) -> str:
        """Gets the make of this Difference.


        :return: The make of this Difference.
        :rtype: str
        """
        return self._make

    @make.setter
    def make(self, make: str):
        """Sets the make of this Difference.


        :param make: The make of this Difference.
        :type make: str
        """

        self._make = make
