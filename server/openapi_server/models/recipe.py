from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.ingredient import Ingredient
from openapi_server.models.step import Step
from openapi_server import util

from openapi_server.models.ingredient import Ingredient  # noqa: E501
from openapi_server.models.step import Step  # noqa: E501

class Recipe(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recipe_name=None, recipe_id=None, rating=None, ingredients=None, steps=None):  # noqa: E501
        """Recipe - a model defined in OpenAPI

        :param recipe_name: The recipe_name of this Recipe.  # noqa: E501
        :type recipe_name: str
        :param recipe_id: The recipe_id of this Recipe.  # noqa: E501
        :type recipe_id: float
        :param rating: The rating of this Recipe.  # noqa: E501
        :type rating: float
        :param ingredients: The ingredients of this Recipe.  # noqa: E501
        :type ingredients: List[Ingredient]
        :param steps: The steps of this Recipe.  # noqa: E501
        :type steps: List[Step]
        """
        self.openapi_types = {
            'recipe_name': str,
            'recipe_id': float,
            'rating': float,
            'ingredients': List[Ingredient],
            'steps': List[Step]
        }

        self.attribute_map = {
            'recipe_name': 'recipeName',
            'recipe_id': 'recipeId',
            'rating': 'rating',
            'ingredients': 'ingredients',
            'steps': 'steps'
        }

        self._recipe_name = recipe_name
        self._recipe_id = recipe_id
        self._rating = rating
        self._ingredients = ingredients
        self._steps = steps

    @classmethod
    def from_dict(cls, dikt) -> 'Recipe':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The recipe of this Recipe.  # noqa: E501
        :rtype: Recipe
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recipe_name(self) -> str:
        """Gets the recipe_name of this Recipe.


        :return: The recipe_name of this Recipe.
        :rtype: str
        """
        return self._recipe_name

    @recipe_name.setter
    def recipe_name(self, recipe_name: str):
        """Sets the recipe_name of this Recipe.


        :param recipe_name: The recipe_name of this Recipe.
        :type recipe_name: str
        """

        self._recipe_name = recipe_name

    @property
    def recipe_id(self) -> float:
        """Gets the recipe_id of this Recipe.


        :return: The recipe_id of this Recipe.
        :rtype: float
        """
        return self._recipe_id

    @recipe_id.setter
    def recipe_id(self, recipe_id: float):
        """Sets the recipe_id of this Recipe.


        :param recipe_id: The recipe_id of this Recipe.
        :type recipe_id: float
        """

        self._recipe_id = recipe_id

    @property
    def rating(self) -> float:
        """Gets the rating of this Recipe.


        :return: The rating of this Recipe.
        :rtype: float
        """
        return self._rating

    @rating.setter
    def rating(self, rating: float):
        """Sets the rating of this Recipe.


        :param rating: The rating of this Recipe.
        :type rating: float
        """

        self._rating = rating

    @property
    def ingredients(self) -> List[Ingredient]:
        """Gets the ingredients of this Recipe.


        :return: The ingredients of this Recipe.
        :rtype: List[Ingredient]
        """
        return self._ingredients

    @ingredients.setter
    def ingredients(self, ingredients: List[Ingredient]):
        """Sets the ingredients of this Recipe.


        :param ingredients: The ingredients of this Recipe.
        :type ingredients: List[Ingredient]
        """

        self._ingredients = ingredients

    @property
    def steps(self) -> List[Step]:
        """Gets the steps of this Recipe.


        :return: The steps of this Recipe.
        :rtype: List[Step]
        """
        return self._steps

    @steps.setter
    def steps(self, steps: List[Step]):
        """Sets the steps of this Recipe.


        :param steps: The steps of this Recipe.
        :type steps: List[Step]
        """

        self._steps = steps
