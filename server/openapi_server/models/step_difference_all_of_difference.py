from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class StepDifferenceAllOfDifference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, step_id=None):  # noqa: E501
        """StepDifferenceAllOfDifference - a model defined in OpenAPI

        :param step_id: The step_id of this StepDifferenceAllOfDifference.  # noqa: E501
        :type step_id: float
        """
        self.openapi_types = {
            'step_id': float
        }

        self.attribute_map = {
            'step_id': 'stepId'
        }

        self._step_id = step_id

    @classmethod
    def from_dict(cls, dikt) -> 'StepDifferenceAllOfDifference':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The stepDifference_allOf_difference of this StepDifferenceAllOfDifference.  # noqa: E501
        :rtype: StepDifferenceAllOfDifference
        """
        return util.deserialize_model(dikt, cls)

    @property
    def step_id(self) -> float:
        """Gets the step_id of this StepDifferenceAllOfDifference.


        :return: The step_id of this StepDifferenceAllOfDifference.
        :rtype: float
        """
        return self._step_id

    @step_id.setter
    def step_id(self, step_id: float):
        """Sets the step_id of this StepDifferenceAllOfDifference.


        :param step_id: The step_id of this StepDifferenceAllOfDifference.
        :type step_id: float
        """
        if step_id is None:
            raise ValueError("Invalid value for `step_id`, must not be `None`")  # noqa: E501

        self._step_id = step_id
